@startuml
header : 通信流程
title : 手势SDK通信流程
footer : 20221020 create by tunmx

actor 业务逻辑层
participant API
participant 算法中间层
participant 推理层

note over API, 推理层
    注意:
    1. 在API层上会有较多栈内存上的数据创建，需要手动释放
    2. 推理层上是运行速度瓶颈，不同设备的运算速度不一致
end note

'autonumber
业务逻辑层 -> API++: 创建图像数据流CameraBuffer
API -> 算法中间层++: 写入数据申请栈内存
return 返回创建的相机流实例
return 返回数据流句柄指针

业务逻辑层 -> API++: 创建算法上下文管理器MGContext
API -> 算法中间层++: 创建算法示例申请栈内存
算法中间层 -> 推理层++: 新建神经网络推理会话Session
return 返回新建Session实例
return 返回算法中间层的实例对象
return 返回上下文指针句柄

|||

业务逻辑层 -> API: 通过句柄写入原始数据流到CameraBuffer
|||
业务逻辑层 -> API++: 通过句柄执行手势算法函数
API -> 算法中间层++: 传递原始数据流
|||
算法中间层 -> 算法中间层: a.图像解码 \nb.图像预处理\nc.数据封装
算法中间层 -> 推理层++: 向Session传递封装后tensor数据
推理层 -> 推理层: a.执行推理\nb.提取出结果
return 返回推理结果tensor数据
|||
算法中间层 -> 算法中间层: a.数据后处理\nb.数据封包
return 算法中间层检测结果
return 返回手势结果multiGestures指针对象

legend right
1. 业务逻辑层主要是调用的那端，如引用算法动态库和头文件的业务逻辑层
2. API层主要是c_api接口层的内容，主要作为数据封装、中转和向下传递等交互功能
3. 算法中间层主要负责算法内部的业务逻辑和与推理框架进行通讯的作用
4. 推理层主要负责设备商神经网络的计算推理部分，有CPU/GPU/NPU等多种模式的计算单元

大部分耗时基本在推理层上
endlegend

@enduml